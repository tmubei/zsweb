{"version":3,"sources":["mitgo.svg","assets/images/ff1.png","assets/images/ff2.png","assets/images/ff3.png","assets/images/ff4.png","redux/actions-types.js","redux/reducers.js","redux/store.js","api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/Login.jsx","component/link-button/index.jsx","component/header/Header.jsx","component/footer/Footer.jsx","utils/dataUtils.js","pages/home/Home.jsx","redux/actions.js","pages/article/Article.jsx","pages/category/Category.jsx","pages/tech/Tech.jsx","pages/article/ArticleAdd.jsx","pages/article/ArticleView.jsx","pages/article/ArticleEdit.jsx","pages/life/Youku.jsx","pages/life/Toudu.jsx","pages/life/Glory.jsx","pages/life/Lol.jsx","pages/admin/Admin.jsx","pages/login/Register.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","ACTION_SET_IS_LOGIN_VISIBLE","ACTION_SET_IS_REGISTER_VISIBLE","ACTION_SET_CATEGORIES","ACTION_SET_TOPICS","categories","state","action","type","payload","topics","isLoginVisible","isRegisterVisible","createStore","combineReducers","reducers","composeWithDevTools","applyMiddleware","thunk","ajax","url","data","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","name","password","reqRegister","user","reqCategories","reqAddCategories","cate","reqRemoveCategories","id","reqGetTopics","reqViewTopic","tid","reqEditTopic","reqDeleteTopic","reqAddReply","reply","reqDeleteReply","rid","saveUser","store","set","getUser","removeUser","remove","Login","handleSubmit","e","preventDefault","props","form","validateFields","err","values","a","result","username","Name","Status","success","memoryUtils","storageUtils","history","replace","this","validatePwd","rule","value","callback","length","test","getFieldDecorator","className","onSubmit","Item","rules","required","whitespace","min","max","pattern","prefix","style","color","placeholder","validator","overflow","valuePropName","initialValue","htmlType","block","to","React","Component","create","LinkButton","Search","SubMenu","withRouter","useState","logOut","setLogOut","path","location","pathname","match","xs","sm","md","lg","xl","xxl","src","logo","alt","onClick","key","selectedKeys","mode","menuNodes","title","ItemGroup","size","onSearch","console","log","confirm","content","okText","cancelText","onOk","Footer","formatStr","str","trim","substring","connect","dispatch","useEffect","fetch","res","json","Categories","Topics","setTopics","setCategories","filterTopics","selectTopics","queries","URI","parseQuery","window","search","label","filter","topic","Category","Labels","IconText","text","marginRight","map","index","Title","autoplay","ff1","width","height","ff2","ff3","ff4","bordered","marginTop","itemLayout","pagination","onChange","page","pageSize","dataSource","renderItem","item","actions","Created","Views","ReplyCount","Meta","avatar","Id","description","href","Column","Article","getTopics","setState","reverse","deleteTopic","Code","componentDidMount","extra","align","rowKey","record","dataIndex","render","context","time","Date","now","getCate","getCategories","addCategories","removeCategories","cateId","handleRemoveCate","String","span","Tech","Option","ArticleAdd","loading","validateFieldsAndScroll","formData","FormData","append","refs","attachment","files","select","toHTML","method","body","push","myUploadFn","param","xhr","XMLHttpRequest","fd","errorFn","msg","upload","addEventListener","event","progress","loaded","total","JSON","parse","responseText","file","open","send","setTimeout","setFieldsValue","BraftEditor","createEditorState","spinning","textAlign","labelCol","wrapperCol","hasFeedback","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","validateTrigger","_","isEmpty","controls","media","uploadFn","ref","WrappedArticleAdd","TextArea","ArticleView","replies","submitting","getTopicView","Topic","Replies","addReply","deleReply","getParam","handleChange","target","namestr","RegExp","exec","marginLeft","lineHeight","display","alignItems","fontSize","fullscreen","theme","twoToneColor","dangerouslySetInnerHTML","__html","Content","header","showQuickJumper","author","flex","datetime","rows","getTopicEdit","Attachment","Youku","Toudu","Glory","Lol","Admin","component","Home","ArticleEdit","RegisterForm","confirmDirty","autoCompleteResult","email","handleConfirmBlur","compareToFirstPassword","getFieldValue","validateToNextPassword","force","handleWebsiteChange","domain","Password","onBlur","offset","Register","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2535f103.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mitgo.dee86c82.svg\";","module.exports = __webpack_public_path__ + \"static/media/ff1.ac3490e8.png\";","module.exports = __webpack_public_path__ + \"static/media/ff2.090b83e7.png\";","module.exports = __webpack_public_path__ + \"static/media/ff3.54a059c9.png\";","module.exports = __webpack_public_path__ + \"static/media/ff4.40e0df12.png\";","export const ACTION_SET_IS_LOGIN_VISIBLE = 'SET_IS_LOGIN_VISIBLE';\nexport const ACTION_SET_IS_REGISTER_VISIBLE = 'SET_IS_REGISTER_VISIBLE';\nexport const ACTION_SET_CATEGORIES = 'SET_CATEGORIES';\nexport const ACTION_SET_TOPICS = 'SET_TOPICS';","import {\n    ACTION_SET_IS_LOGIN_VISIBLE,\n    ACTION_SET_IS_REGISTER_VISIBLE,\n\n    ACTION_SET_CATEGORIES,\n    ACTION_SET_TOPICS,\n} from './actions-types';\n\nexport default {\n    categories(state=[],action){\n        const {type,payload} = action;\n        switch (type) {\n            case ACTION_SET_CATEGORIES:\n                return payload;\n            default:\n        }\n        return state;\n    },\n    topics(state=[],action){\n        const {type,payload} = action;\n        switch (type) {\n            case ACTION_SET_TOPICS:\n                return payload;\n            default:\n        }\n        return state;\n    },\n    isLoginVisible(state = false,action){\n        const {type, payload} = action;\n        switch (type) {\n            case ACTION_SET_IS_LOGIN_VISIBLE:\n                \n                return payload;\n        \n            default:\n        }\n\n        return state;\n    },\n    isRegisterVisible(state=false,action){\n        const {type,payload} = action;\n        switch (type) {\n            case ACTION_SET_IS_REGISTER_VISIBLE:\n                return payload;\n            default:\n        }\n\n        return state;\n    }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nexport default createStore(\n    combineReducers(reducers),\n    {\n        isLoginVisible: false,\n        isRegisterVisible: false,\n\n        categories:[],\n        topics:[],\n    },\n    composeWithDevTools(applyMiddleware(thunk))\n);\n","/*\n*\n* 能发送ajax的函数模块\n* 封装了axios库\n* 函数的返回值是promise对象\n*\n*\n* */\nimport axios from 'axios';\nimport {message} from \"antd\";\n\nexport default function ajax(url,data={},type='GET'){\n    return new Promise((resolve,reject)=>{\n      let promise;\n      if(type==='GET'){ //发GET请求\n          promise = axios.get(url,{//配置参数\n              params:data //制定请求参数\n          });\n      }else{\n          promise = axios.post(url,data);\n      }\n\n      promise.then(response=>{\n          resolve(response.data)\n      }).catch(error=>{\n          message.error(`请求出错:${error.message}`);\n      })\n    })\n}","/*\n* 包含应用中所有接口请求函数的模块\n*\n*\n* */\n\nimport ajax from './ajax';\nimport jsonp from 'jsonp';\nimport {message} from \"antd\";\n\n//登录\nexport const reqLogin = (name,password) => ajax('/loginat',{name,password},'POST');\n\n//注册\nexport const reqRegister = (user) => ajax('/register',user,'POST');\n\n//获取分类列表\nexport const reqCategories = () => ajax('/categoryAt',{},'POST');\n\n//添加分类\nexport const reqAddCategories = (cate,type) => ajax('/categoryAt',{'Name': cate,'Op':type},'POST');\n\n//删除分类\nexport const reqRemoveCategories = (id,type) => ajax('/categoryAt',{'Id': id,'Op':type},'POST');\n\n//获取文章列表\nexport const reqGetTopics = () => ajax('/topicat',{},);\n\n\n//添加文章\n// export const reqAddTopic = (topic) => ajax('/topicat/add',{topic},'POST');\n\n//获取文章和评论\nexport const reqViewTopic = (tid) => ajax(`/topicat/view/${tid}`);\n\n//编辑文章\nexport const reqEditTopic = (tid) => ajax(`/topicat/edit?tid=${tid}`);\n\n//删除文章\nexport const reqDeleteTopic = (id) => ajax(`/topicat/delete?tid=${id}`,{},'POST');\n\n//添加评论\nexport const reqAddReply = (reply) => ajax('/replyat/add',reply,'POST');\n\n//删除评论\nexport const reqDeleteReply = (tid,rid) => ajax(`/replyat/delete?tid=${tid}&rid=${rid}`);\n\n\n\n\n\n/*\n* json请求接口函数\n* jsonp解决ajax跨域问题的原理\n* 1).jsonp只能解决GET类型的ajax请求跨域问题\n* 2).jsonp请求不是ajax请求，而是一般的get请求\n* 3).基本原理\n*   浏览器端：\n*       动态生成<script>来请求后台借口(src就是接口的url)\n*       定义好用于接收相应数据的函数，并将函数名通过请求参数提交给后台（如：callback=fn)\n*   服务器端：\n*       接收到请求处理产生结果数据后，返回一个函数调用的js代码，并将结果数据作为实参传入函数调用\n*   浏览器端：\n*       收到响应自动执行函数调用的js代码，也就执行了提前定义好的回调函数，并得到了需要的结果数据\n* */\nexport const reqWeather = (city)=>{\n    return new Promise((resolve,reject) => { //返回一个promise对象\n        const url =`http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\n        //发送jsonp请求\n        jsonp(url,{},(err,data)=>{\n            console.log('jsonp',err,data);\n            //如果成功\n            if(!err && data.status==='success'){\n                //取出需要的数据\n                const {dayPictureUrl,weather} =data.results[0].weather_data[0];\n                resolve({dayPictureUrl,weather})\n            }else{\n                //如果失败了\n                message.error('获取天气信息失败')\n            }\n        })\n    })\n\n};\n\n// reqWeather('北京');","export default {\n    user:{},\n}","import store from 'store'\nconst NAME = 'name';\nexport default {\n    //保存user\n    saveUser (user){\n        store.set(NAME,user);\n    },\n    //读取user\n    getUser() {\n        return store.get(NAME)||{};\n    },\n\n    //删除user\n    removeUser(){\n        store.remove(NAME);\n    }\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Input,Icon,Button,Form,Checkbox,message} from 'antd';\n\nimport './Login.less';\nimport {reqLogin} from \"../../api\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtils from \"../../utils/storageUtils\";\n\nclass Login extends React.Component {\n\n    handleSubmit = e => {\n        //阻止事件默认行为\n        e.preventDefault();\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                // console.log('Received values of form: ', values);\n                const {name,password} = values;\n                const result = await reqLogin(name,password);\n                const username = result.Name;\n\n                if(result.Status === 200){\n                    message.success('登录成功');\n                    //保存data\n                    memoryUtils.user={username};\n                    storageUtils.saveUser({username});\n                    //跳转到管理页面\n                    this.props.history.replace('/')\n                }\n            }\n        });\n    };\n    validatePwd = (rule,value,callback)=>{\n        if(!value){\n            callback('密码必须输入');\n        }else if(value.length<6){\n            callback('密码长度不能小于6位');\n        }else if(value.length>12){\n            callback('密码长度不能大于12位');\n        }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\n            callback('密码必须是英文，数字或下划线组成');\n        }else{\n            callback(); //验证通过\n        }\n    };\n\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        // const {onCancel} =this.props;\n\n        return (\n            <div className=\"login\">\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                        {getFieldDecorator('name', {\n                            rules: [\n                                { required: true, whitespace:true, message: '用户名必须输入!' },\n                                { min: 4, message: '用户名至少4位' },\n                                { max: 12, message: '用户名最多12位' },\n                                { pattern:/^[a-zA-Z0-9_]+$/,message:'用户名必须是英文、数字或下划线组成'},\n                            ],\n\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"请输入用户名！\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                    validator:this.validatePwd\n                                }\n                                ],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"password\"\n                                placeholder=\"请输入密码！\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        <div style={{overflow:\"hidden\"}}>\n                            {getFieldDecorator('remember', {\n                                valuePropName: 'checked',\n                                initialValue: true,\n                            })(<Checkbox>记住密码</Checkbox>)}\n                            {/*<a className=\"login-form-forgot\" href=\"/\" style={{float:\"right\",paddingRight:\"10px\"}}>\n                            忘记密码\n                        </a>*/}\n                        </div>\n\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\n                            登录\n                        </Button>\n                        <div>没有账号？请 <Link to=\"/register\"><span>注册</span></Link> </div>\n                    </Form.Item>\n                </Form>\n            </div>\n\n        );\n    }\n}\n\nLogin = Form.create({})(Login);\n\nexport default Login;\n","import React from \"react\";\nimport './index.less';\n\nexport default function LinkButton(props){\n    //外形像链接的按钮\n    return (\n        <span {...props} className=\"link-button\">\n\n        </span>\n    )\n\n}","import React, {useState} from 'react';\nimport {Link,withRouter} from 'react-router-dom';\nimport {Row, Col,Menu,Input,Modal} from 'antd';\nimport './Header.less';\nimport logo from '../../mitgo.svg';\nimport memoryUtils from \"../../utils/memoryUtils\";\n\nimport LinkButton from '../link-button';\nimport storageUtils from \"../../utils/storageUtils\";\n\n// import MenuList from '../config/menuConfig';\n\nconst { Search } = Input;\nconst { SubMenu } = Menu;\n\nfunction Header(props) {\n\n    const menuNodes = (MenuList) =>{\n        // console.log(props.location.pathname);\n    };\n    const [logOut,setLogOut] = useState(false);\n\n    let path = props.location.pathname;\n    if(path.match(/\\/\\w+/) ){\n        path = path.match(/\\/\\w+/)[0];\n    }\n\n    const handle = (e)=>{\n        path = e.key;\n    };\n\n    const logout =()=>{\n        Modal.confirm({\n            title:'提示',\n            content:'您确认退出吗？',\n            okText:'确认',\n            cancelText:'取消',\n            onOk:()=>{\n                //删除保存的user数据\n                storageUtils.removeUser();\n                memoryUtils.user = {};\n                setLogOut(!logOut);\n            }\n        })\n    };\n\n    const {username} = memoryUtils.user;\n\n    return (\n        <header className=\"header\">\n            <Row className=\"menu\">\n                <Col xs={4} sm={3} md={2} lg={1} xl={1} xxl={1}>\n                    <img className=\"logo\" src={logo} alt={\"mitgo\"}/>\n                </Col>\n                <Col xs={20} sm={10} md={12} lg={13} xl={14} xxl={15}>\n                    <Menu\n                        onClick={handle}\n                        selectedKeys={[path]}\n                        // defaultOpenKeys={[]}\n                        mode=\"horizontal\"\n                    >\n                        {\n                            menuNodes()\n                        }\n                        <Menu.Item key=\"/home\">\n                            <Link to=\"/\">首页</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"/category\">\n                            <Link to=\"/category\">分类</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"/article\">\n                            <Link to=\"/article\">文章</Link>\n                        </Menu.Item>\n                        <SubMenu\n                            key=\"sub1\"\n                            title={\n                                <span className=\"submenu-title-wrapper\">\n                                  生活\n                                </span>\n                            }\n                        >\n                            <Menu.ItemGroup title=\"视频\">\n                                <Menu.Item key=\"/youku\">\n                                    <Link to=\"/youku\">优酷</Link>\n                                </Menu.Item>\n                                <Menu.Item key=\"/toudu\">\n                                    <Link to=\"/toudu\">土豆</Link>\n                                </Menu.Item>\n                                </Menu.ItemGroup>\n                                <Menu.ItemGroup title=\"游戏\">\n                                <Menu.Item key=\"/glory\">\n                                    <Link to=\"/glory\">王者荣耀</Link>\n                                </Menu.Item>\n                                <Menu.Item key=\"/lol\">\n                                    <Link to=\"/lol\">英雄联盟</Link>\n                                </Menu.Item>\n                            </Menu.ItemGroup>\n                        </SubMenu>\n                        <Menu.Item key=\"/tech\">\n                            <Link to=\"/tech\">技术</Link>\n                        </Menu.Item>\n                    </Menu>\n                </Col>\n                <Col xs={24} sm={5} md={4} lg={5} xl={5} xxl={5}>\n                    <Search className=\"search\" placeholder=\"请输入\" size=\"small\" onSearch={value => console.log(value)} />\n                </Col>\n                <Col xs={24} sm={6} md={6} lg={5} xl={4} xxl={3}>\n                    {\n                        username?\n                            <div className=\"header-user\">\n                                欢迎:<span className=\"header-user-name\">{username}</span>\n                                <LinkButton onClick={logout}>退出</LinkButton>\n                            </div>\n                            :\n                            <div className=\"header-user\">\n                                <Link className=\"header-user-login\" to=\"/login\">登陆</Link>\n                                <Link to=\"/register\">注册</Link>\n                            </div>\n                    }\n                </Col>\n            </Row>\n        </header>\n    );\n}\n\nexport default withRouter(Header);","import React from 'react';\nimport {Row, Col} from 'antd';\n\nimport \"./Footer.less\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n                <Row className=\"foot\">\n                    <Col xs={24} sm={5} md={5} lg={5} xl={5} xxl={5}>\n                        <p>@2017-2019</p>\n                    </Col>\n                    <Col xs={24} sm={14} md={14} lg={14} xl={14} xxl={14}>\n                        <p>京ICP备案17049124号-1</p>\n                    </Col>\n                    <Col xs={24} sm={5} md={5} lg={5} xl={5} xxl={5}>\n                        <p>版权所有</p>\n                    </Col>\n                </Row>\n        </footer>\n    );\n}\n\nexport default Footer;\n","/*\n* 格式化日期\n* */\n\nexport function formatDate(time){\n    if(!time) return '';\n    return `${time.getFullYear()}-${(time.getMonth()+1)}-${time.getDate()} ${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`;\n}\n\n//字符串格式转化位日期格式\nexport function formatStr(str){\n    if(!str) return '';\n    return str.trim().substring(0,19).replace(\"T\",\" \");\n}","import React, {useEffect} from 'react';\nimport {Row,Col,Carousel, List, Avatar,Icon} from 'antd';\nimport URI from 'urijs';\nimport {Link} from \"react-router-dom\";\nimport {formatStr} from '../../utils/dataUtils';\n\nimport './Home.less';\nimport {connect} from \"react-redux\";\nimport {setCategories, setTopics} from \"../../redux/actions\";\nimport ff1 from '../../assets/images/ff1.png';\nimport ff2 from '../../assets/images/ff2.png';\nimport ff3 from '../../assets/images/ff3.png';\nimport ff4 from '../../assets/images/ff4.png';\n\n\nfunction Home(props) {\n    const {\n        categories,\n        topics,\n        dispatch,\n    } = props;\n\n    useEffect(()=>{\n        fetch('/homeat')\n            .then(res=>res.json())\n            .then(result=>{\n                const {Categories,Topics} = result;\n                dispatch(setTopics(Topics));\n                dispatch(setCategories(Categories));\n            });\n\n    },[dispatch]);\n\n\n    const selectTopics =(type,value) =>{\n        let url;\n        switch (type) {\n            case 'cate':\n                url =`/home?cate=${value}`;\n                break;\n            case 'label':\n                url=`/home?label=${value}`;\n                break;\n            default:\n        }\n        props.history.replace(url);\n    };\n\n    const queries = URI.parseQuery(window.location.search);\n    const {cate,label} = queries;\n\n    let filterTopics;\n\n    if(topics && cate){\n        filterTopics = topics.filter(topic => topic.Category===cate);\n    }else if(topics && label){\n        filterTopics = topics.filter(topic => topic.Labels.match(/[^#$]+/g)[0]===label);\n    }else{\n        filterTopics = topics;\n    }\n\n\n    const IconText = ({ type, text }) => (\n        <span>\n            <Icon type={type} style={{ marginRight: 8 }} />\n                    {text}\n          </span>\n    );\n\n    return (\n        <Row>\n            <Col xs={0} sm={6} md={4}>\n                <nav>\n                    <ul>\n                        {\n                            categories &&\n                            categories.map((cate,index)=>{\n                                return (\n                                    <li key={index}>\n                                        <span onClick={()=>selectTopics('cate',cate.Title)}>{cate.Title}</span>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </nav>\n            </Col>\n            <Col xs={24} sm={18} md={20}>\n                <main>\n                    <Carousel className=\"main-carousel\" autoplay>\n                        <div>\n                            <img src={ff1} style={{width:'100%',height:'100px'}} alt=\"\"/>\n                        </div>\n                        <div>\n                            <img src={ff2} style={{width:'100%',height:'100px'}} alt=\"\"/>\n                        </div>\n                        <div>\n                            <img src={ff3} style={{width:'100%',height:'100px'}} alt=\"\"/>\n                        </div>\n                        <div>\n                            <img src={ff4} style={{width:'100%',height:'100px'}} alt=\"\"/>\n                        </div>\n                    </Carousel>\n                    <List\n                        bordered\n                        style={{marginTop:'20px'}}\n                        itemLayout=\"vertical\"\n                        size=\"large\"\n                        pagination={{\n                            onChange: page => {\n                                // console.log(page);\n                            },\n                            pageSize: 5,\n                        }}\n                        dataSource={filterTopics}\n                        renderItem={item => (\n                            <List.Item\n                                key={item.title}\n                                actions={[\n                                    <IconText type=\"clock-circle-o\" text={formatStr(item.Created)} key=\"list-vertical-star-o\" />,\n                                    <IconText type=\"star-o\" text={`${item.Views}`} key=\"list-vertical-like-o\" />,\n                                    <IconText type=\"message-o\" text={`${item.ReplyCount}`} key=\"list-vertical-message\" />,\n                                ]}\n                            >\n                                <List.Item.Meta\n                                    avatar={<Avatar src='https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png' />}\n                                    title={<Link to={`/article/view?tid=${item.Id}`}>{item.Title}</Link>}\n                                    description={<a href=\"##\" onClick={()=>selectTopics('label',item.Labels.match(/[^#$]+/g)[0])}>{item.Labels.match(/[^#$]+/g)[0]}</a>}\n                                />\n                            </List.Item>\n                        )}\n                    />\n                </main>\n            </Col>\n        </Row>\n\n    );\n}\n\n// export default Home;\nexport default connect(\n    function mapStateToProps(state) {\n        return state;\n    },\n    function mapDispatchToProps(dispatch) {\n        return { dispatch };\n    }\n)(Home);\n","import {\n    ACTION_SET_IS_LOGIN_VISIBLE,\n    ACTION_SET_IS_REGISTER_VISIBLE,\n\n    ACTION_SET_CATEGORIES,\n    ACTION_SET_TOPICS,\n} from \"./actions-types\";\n\nexport function setCategories(categories){\n    return {\n        type:ACTION_SET_CATEGORIES,\n        payload:categories,\n    }\n}\nexport function setTopics(topics){\n    return {\n        type:ACTION_SET_TOPICS,\n        payload:topics,\n    }\n}\n\nexport function toggleIsLoginVisible(isLoginVisible){\n\n    return {\n            type:ACTION_SET_IS_LOGIN_VISIBLE,\n            payload:isLoginVisible,\n    }\n}\n\nexport function toggleIsRegisterVisible(isRegisterVisible){\n    return {\n            type:ACTION_SET_IS_REGISTER_VISIBLE,\n            payload:isRegisterVisible,\n    }\n}","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Card, Table,Button,Icon} from \"antd\";\nimport LinkButton from \"../../component/link-button\";\nimport {reqGetTopics,reqDeleteTopic} from \"../../api/index\";\n\nimport './Article.less'\n\nconst { Column} = Table;\n\nclass Article extends Component {\n\n    state = {\n        topics:[],\n    };\n\n    getTopics = async ()=>{\n        const result = await reqGetTopics();\n        if (result) {\n            this.setState({topics: result.reverse()});\n        }\n    };\n\n    deleteTopic = async (id) => {\n        const result = await reqDeleteTopic(id);\n        if(result.Code === \"200\"){\n            this.getTopics();\n        }\n    };\n\n    componentDidMount = () => {\n        this.getTopics();\n    };\n\n    render(){\n        const topics = this.state.topics;\n\n        return (\n            <Card className=\"article-card\" title=\"文章列表\" extra={\n                <Button type=\"primary\">\n                    <Link to=\"/article/add\">\n                        <Icon type=\"plus\" />新增\n                    </Link>\n\n                </Button>\n            }>\n                <div style={{width:'100%',overflow:'auto'}}>\n                    <Table className=\"article-card-table\"\n                           bordered\n                           align=\"center\"\n                           dataSource={topics}\n                           rowKey={record => record.Id}\n                    >\n                        <Column align=\"center\" title=\"#\" dataIndex=\"Id\" key=\"Id\"\n                                render={(text,record,index)=>`${index+1}`}\n                        />\n                        <Column align=\"center\" title=\"标题\" dataIndex=\"Title\" key=\"action1\"\n                                render = {(dataIndex,content)=>(\n                                    <Link to={`/article/view?tid=${content.Id}`}>\n                                        {dataIndex}\n                                    </Link>\n                                )}\n                        />\n                        <Column align=\"center\" title=\"更新时间\" dataIndex=\"Updated\" key=\"Updated\"/>\n                        <Column align=\"center\" title=\"浏览数\" dataIndex=\"Views\" key=\"Views\"/>\n                        <Column align=\"center\" title=\"评论数\" dataIndex=\"ReplyCount\" key=\"ReplyCount\"/>\n                        <Column align=\"center\" title=\"最后评论时间\" dataIndex=\"ReplyTime\" key=\"ReplyTime\"/>\n                        <Column align=\"center\" title=\"操作\" key=\"action\"\n                                render={(dataIndex,context) => (\n                                    <div>\n                                        <Link to={`/article/edit?tid=${context.Id}`} style={{marginRight:'20px'}}>\n                                            编辑\n                                        </Link>\n                                        <LinkButton onClick={()=>this.deleteTopic(context.Id)}>\n                                            删除\n                                        </LinkButton>\n                                    </div>\n                                )}\n                        />\n                    </Table>\n                </div>\n\n            </Card>\n        );\n    }\n}\n\nexport default Article;\n","import React, {Component} from 'react';\nimport {Button, Form, Input,Table,Card,Icon,Row,Col} from 'antd';\nimport {reqCategories,reqAddCategories,reqRemoveCategories} from '../../api/index';\nimport LinkButton from \"../../component/link-button\";\nimport './Category.less';\nconst { Column} = Table;\n\nclass Category extends Component{\n\n    state={\n      categories:[],\n      time:Date.now(),\n      getCate:false,\n    };\n\n    getCategories =async ()=>{\n        const result =await reqCategories();\n        if (result){\n            this.setState({categories:result});\n        }\n    };\n\n    addCategories = async (cate,type) => {\n        const result = await reqAddCategories(cate,type);\n        if (result) {\n            this.setState({categories: result});\n        }\n    };\n    removeCategories =async (cateId,type) =>{\n        const result = await reqRemoveCategories(cateId,type);\n        if (result) {\n            this.setState({categories: result});\n        }\n    };\n    handleRemoveCate = (id)=>{\n        this.removeCategories(String(id),'del');\n    };\n\n    handleSubmit =(e)=>{\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const {cate} = values;\n                this.addCategories(cate,'add');\n            }\n        });\n    };\n\n    componentDidMount =() =>{\n        this.getCategories();\n\n    };\n\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        const {categories} = this.state;\n\n        return (\n            <div className=\"category\">\n                <Form onSubmit={this.handleSubmit} className='category-form'>\n                    <Form.Item className='category-form-item'>\n                        <Row>\n                            <Col span={15}>\n                                {getFieldDecorator('cate', {\n                                    rules: [\n                                        { required: true, message: '请输入类名!' },\n                                        { min:2,message:'类名至少两位'},\n                                        { max:10,message:'类名至多十二位'},\n                                        { pattern:/[^/u4e00\\-/u9fa5]+$/,message:'用户名必须是中文'}\n                                    ],\n                                })(\n                                    <Input\n                                        className='category-form-item-input'\n                                        placeholder=\"请输入类名\"\n                                    />,\n                                )}\n                            </Col>\n                            <Col span={9}  className=\"category-form-col\">\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"category-form-col-button\">\n                                    <Icon type='plus' />添加\n                                </Button>\n                            </Col>\n                        </Row>\n\n                    </Form.Item>\n                </Form>\n\n                <Card title=\"分类列表\">\n                    <Table\n                        bordered\n                        align=\"center\"\n                        dataSource={categories}\n                        rowKey={record => record.Id}\n                    >\n                        <Column align=\"center\" title=\"序号\" dataIndex=\"Id\" key=\"Id\"\n                            render={(text,record,index)=>`${index+1}`}\n                        />\n                        <Column align=\"center\" title=\"类名\" dataIndex=\"Title\" key=\"Title\" />\n                        <Column align=\"center\" title=\"文章总数\" dataIndex=\"TopicCount\" key=\"TopicCount\"/>\n                        <Column align=\"center\" title=\"操作\" key=\"action\"\n                            render={(dataIndex) => (\n                                <LinkButton onClick={()=>this.handleRemoveCate(dataIndex.Id)}>\n                                    删除\n                                </LinkButton>\n                            )}\n                        />\n                    </Table>\n                </Card>\n\n            </div>\n        );\n    }\n}\nCategory = Form.create({})(Category);\n\nexport default Category;\n","import React from 'react';\nimport './Tech.less';\n\nfunction  Tech(props){\n    return (\n        <div className=\"tech\">\n            <h1>敬请期待</h1>\n        </div>\n    );\n}\n\nexport default Tech;\n","import React, {Component} from \"react\";\nimport {Form,Input,Select,Button,Spin} from 'antd';\nimport './ArticleAdd.less';\nimport BraftEditor from 'braft-editor';\nimport 'braft-editor/dist/index.css'\nimport {reqCategories} from \"../../api\";\n\nconst { Option } = Select;\n\nclass ArticleAdd extends Component {\n\n    state = {\n        categories:[],\n        loading: false\n    };\n    getCategories = async ()=>{\n        const result = await reqCategories();\n        if (result) {\n            this.setState({categories: result});\n        }\n    };\n\n    componentDidMount () {\n        //获取分类列表\n        this.getCategories();\n\n        // 异步设置编辑器内容\n        setTimeout(() => {\n            this.props.form.setFieldsValue({\n                content: BraftEditor.createEditorState('')\n            })\n        }, 1000);\n\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.setState({loading:true});\n                let formData = new FormData();\n                formData.append('attachment',this.refs.attachment.files[0]);\n                formData.append('title',values.title);\n                formData.append('category',values.select);\n                formData.append('content',values.content.toHTML());\n                formData.append('label',values.label);\n\n                fetch(\"/topicat/add\",{\n                    method:\"POST\",\n                    body:formData\n\n                }).then(res=>res.json())\n                .then(result=>{\n                    if(result.Code === \"200\"){\n                        this.props.history.push('/article');\n                    }\n                });\n            }\n        });\n    };\n\n    myUploadFn = (param) => {\n\n        const serverURL = '/upload';\n        const xhr = new XMLHttpRequest();\n        const fd = new FormData();\n\n        const successFn = (response) => {\n            // 假设服务端直接返回文件上传后的地址\n            // 上传成功后调用param.success并传入上传后的文件地址\n            param.success({\n                url: JSON.parse(xhr.responseText),\n                /*meta: {\n                    id: 'xxx',\n                    title: 'xxx',\n                    alt: 'xxx',\n                    loop: true, // 指定音视频是否循环播放\n                    autoPlay: true, // 指定音视频是否自动播放\n                    controls: true, // 指定音视频是否显示控制栏\n                    // poster: 'http://xxx/xx.png', // 指定视频播放器的封面\n                    poster: /attachment/+xhr.responseText.Message, // 指定视频播放器的封面\n                }*/\n            });\n        };\n\n        const progressFn = (event) => {\n            // 上传进度发生变化时调用param.progress\n            param.progress(event.loaded / event.total * 100)\n        };\n\n        const errorFn = (response) => {\n            // 上传发生错误时调用param.error\n            param.error({\n                msg: 'unable to upload.'\n            })\n        };\n\n        xhr.upload.addEventListener(\"progress\", progressFn, false);\n        xhr.addEventListener(\"load\", successFn, false);\n        xhr.addEventListener(\"error\", errorFn, false);\n        xhr.addEventListener(\"abort\", errorFn, false);\n\n        fd.append('attachment', param.file);\n        xhr.open('POST', serverURL, true);\n        xhr.send(fd)\n\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const {categories} = this.state;\n\n        const controls = [\n\n            'undo', 'redo', 'separator',\n            'font-size', 'line-height', 'letter-spacing', 'separator',\n            'text-color', 'bold', 'italic', 'underline', 'strike-through', 'separator',\n            'superscript', 'subscript', 'remove-styles', 'emoji',  'separator', 'text-indent', 'text-align', 'separator',\n            'headings', 'list-ul', 'list-ol', 'blockquote', 'code', 'separator',\n            'link', 'separator', 'hr', 'separator',\n            'media', 'separator',\n            'clear'\n            // ,\n\n           /* 'bold', 'italic', 'underline', 'text-color', 'separator',\n            'link', 'separator', 'media'*/\n        ];\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                md: { span: 24  },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                md: { span: 24 },\n            },\n        };\n\n        return (\n            <div className=\"article-add\">\n                <Spin spinning={this.state.loading} size=\"large\">\n                    <h3 style={{textAlign:'center'}}>添加文章</h3>\n                    <Form className=\"article-add-form\" {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Form.Item label=\"标题\" >\n                            {getFieldDecorator('title', {\n                                rules: [{ required: true, message: '请输入标题!', whitespace: true }],\n                            })(<Input placeholder=\"请输入标题!\"/>)}\n                        </Form.Item>\n                        <Form.Item label=\"分类\" hasFeedback>\n                            {getFieldDecorator('select', {\n                                rules: [{ required: true, message: 'Please select your country!' }],\n                            })(\n                                <Select\n                                    showSearch\n                                    placeholder=\"请选择分类\"\n                                    optionFilterProp=\"children\"\n                                    filterOption={(input, option) =>\n                                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                >\n                                    {\n                                        categories.map((cate)=>{\n                                            return (\n                                                <Option key={cate.Id} value={cate.Title} >{cate.Title}</Option>\n                                            )\n                                        })\n                                    }\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"标签\" >\n                            {getFieldDecorator('label', {\n                                rules: [{ required: true, message: '请输入标签!' }],\n                            })(<Input placeholder=\"请输入标签!\"/>)}\n                        </Form.Item>\n                        <Form.Item  label=\"文章正文\">\n                            {getFieldDecorator('content', {\n                                validateTrigger: 'onBlur',\n                                rules: [{\n                                    required: true,\n                                    validator: (_, value, callback) => {\n                                        if (value.isEmpty()) {\n                                            callback('请输入正文内容')\n                                        } else {\n                                            callback()\n                                        }\n                                    }\n                                }],\n                            })(\n                                <BraftEditor\n                                    className=\"my-editor\"\n                                    controls={controls}\n                                    placeholder=\"请输入正文内容\"\n                                    media={{uploadFn: this.myUploadFn}}\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"文件\" >\n\n                            <input className=\"article-add-file\" type=\"file\" ref=\"attachment\"/>\n                        </Form.Item>\n                        <Form.Item style={{textAlign:\"center\"}}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                添加文章\n                            </Button>\n                        </Form.Item>\n\n                    </Form>\n                </Spin>\n            </div>\n        )\n    }\n}\n\nconst WrappedArticleAdd = Form.create({ name: 'validate_other' })(ArticleAdd);\n\nexport default WrappedArticleAdd;","import React,{Component} from \"react\";\nimport {Tooltip,Icon,Comment,Avatar,Row,Col,Card,Button,Calendar,List,Input,Form} from \"antd\";\nimport './ArticleView.less';\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport LinkButton from \"../../component/link-button\";\nimport {reqViewTopic,reqAddReply,reqDeleteReply} from \"../../api\";\nimport {formatStr} from '../../utils/dataUtils';\n\n// import moment from 'moment';\n\nconst { TextArea } = Input;\n\n\n\n\nclass ArticleView extends Component {\n\n    state = {\n        topic:{},\n        tid:null,\n        replies:[],\n        username:null,\n        submitting: false,\n        value: '',\n    };\n\n    //获取参数\n    getParam(name){\n        const namestr = name.trim();\n        const res = new RegExp(\"[\\\\?&]\"+namestr+\"=([^&#]*)\").exec(this.props.location.search);\n        if(res == null){\n            return \"\";\n        }else{\n            return res[1];\n        }\n    }\n\n    //获取文章和评论\n    getTopicView = async (tid) =>{\n        const result = await reqViewTopic(tid);\n        if(result){\n            this.setState({topic:result.Topic});\n            this.setState({replies:result.Replies});\n        }\n    };\n\n    //添加评论\n    addReply = async (reply) =>{\n        const result = await reqAddReply(reply);\n        if(result){\n            this.setState({replies:result})\n        }\n    };\n\n    //删除评论\n    deleReply = async (tid,rid) =>{\n        const result = await reqDeleteReply(tid,rid);\n        if(result){\n            this.setState({replies:result});\n        }\n    };\n\n\n    componentDidMount = () => {\n        //获取文章\n        const tid = this.getParam(\"tid\");\n        this.setState({tid:tid});\n\n        this.getTopicView(tid);\n\n        //获取用户名\n        const {username} = memoryUtils.user;\n        this.setState({username:username})\n    };\n\n\n    handleSubmit = () => {\n        if (!this.state.value) {\n            return;\n        }\n\n        const reply = {\n            \"tid\":this.state.topic.Id,\n            \"nickname\":this.state.username,\n            \"content\":this.state.value,\n        };\n\n        this.addReply(reply);\n\n        this.setState({\n            value: null,\n        });\n\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    render() {\n        const { topic,replies, submitting, value,username } = this.state;\n        return (\n            <Row>\n                <Col xs={0} md={8} lg={6}>\n                    <Card  className=\"article-view-user\" title={\n                        <div>\n                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                            <LinkButton style={{marginLeft:\"10px\"}}>{username}</LinkButton>\n                        </div>\n\n                    } extra={<Button type=\"primary\" style={{ height:\"20px\",lineHeight:\"18px\" }}>关注</Button>}>\n                        <ul className=\"article-view-user-basic\" style={{display:\"flex\",alignItems:\"center\",}}>\n                            <li>\n                                <LinkButton style={{width:\"14px\"}}>博文</LinkButton>\n                                <p style={{fontSize:\"12px\"}}>10</p>\n                            </li>\n                            <li>\n                                <LinkButton style={{width:\"14px\"}}>粉丝</LinkButton>\n                                <p style={{fontSize:\"12px\"}}>10</p>\n                            </li>\n                            <li>\n                                <LinkButton style={{width:\"14px\"}}>喜欢</LinkButton>\n                                <p style={{fontSize:\"12px\"}}>10</p>\n                            </li>\n                            <li>\n                                <LinkButton style={{width:\"14px\"}}>评论</LinkButton>\n                                <p style={{fontSize:\"12px\"}}>10</p>\n                            </li>\n                        </ul>\n                    </Card>\n                    <div className=\"article-view-calendar\">\n                        <Calendar fullscreen={false} />\n                    </div>\n                </Col>\n                <Col xs={24} md={16} lg={18}>\n                    <div className=\"article-view-topic\">\n                        <div className=\"article-view-main-title\">\n                            <h2><Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" style={{marginRight:\"10px\"}}/>{topic.Title}</h2>\n                            <p style={{fontSize:\"12px\"}}><span>{formatStr(topic.Created)}</span>&nbsp;&nbsp;<LinkButton>{username}</LinkButton>&nbsp;&nbsp;<span>浏览数：{topic.Views}</span></p>\n                        </div>\n                        <div className=\"article-view-main-title-content\">\n                            <div dangerouslySetInnerHTML={{__html:topic.Content}} />\n                        </div>\n                        <div>\n                            {\n                                replies.length > 0 &&\n                                <List\n                                    className=\"comment-list\"\n                                    header={`${replies.length} 回复`}\n                                    itemLayout=\"horizontal\"\n                                    dataSource={replies.reverse()}\n                                    pagination={{\n                                        onChange: page => {\n\n                                        },\n                                        pageSize: 5,\n                                        showQuickJumper:true\n                                    }}\n                                    renderItem={item => (\n                                        <li>\n                                            <Comment\n                                                actions={\n                                                    <span key=\"comment-list-reply-to-0\">Reply to</span>\n                                                }\n                                                author={item.Name}\n                                                avatar={'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'}\n                                                content={\n                                                    <div style={{display:\"flex\",alignItems:\"center\"}}>\n                                                        <p style={{flex:1,marginLeft:\"20px\"}}>{item.Content}</p>\n                                                        <LinkButton style={{textAlign:\"right\"}} onClick={()=>this.deleReply(topic.Id,item.Id)}>删除</LinkButton>\n                                                    </div>\n                                                }\n                                                datetime={\n                                                    <Tooltip\n                                                        title={formatStr(item.Created)}\n                                                    >\n                                                <span>\n                                                  {formatStr(item.Created)}\n                                                </span>\n                                                    </Tooltip>\n                                                }\n                                            />\n                                        </li>\n                                    )}\n                                />\n                            }\n                            <Comment\n                                className=\"article-comment\"\n                                avatar={\n                                    <Avatar\n                                        src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                                        alt=\"Han Solo\"\n                                    />\n                                }\n                                content={\n                                    <Form>\n                                        <Form.Item>\n                                            <TextArea rows={4} onChange={this.handleChange} value={value} />\n                                        </Form.Item>\n                                        <Form.Item>\n                                            <Button htmlType=\"submit\" loading={submitting} onClick={this.handleSubmit} type=\"primary\">\n                                                添加评论\n                                            </Button>\n                                        </Form.Item>\n                                    </Form>\n                                }\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ArticleView;\n","import React, {Component} from \"react\";\nimport {Form, Input, Select, Button, Spin} from 'antd';\nimport './ArticleEdit.less';\nimport BraftEditor from 'braft-editor';\nimport 'braft-editor/dist/index.css'\nimport {reqCategories,reqEditTopic} from \"../../api\";\n\nconst { Option } = Select;\n\nclass ArticleAdd extends Component {\n\n    state = {\n        categories:[],\n        topic:{},\n        tid:null,\n        loading: false\n    };\n    //获取参数\n    getParam(name){\n        const namestr = name.trim();\n        const res = new RegExp(\"[\\\\?&]\"+namestr+\"=([^&#]*)\").exec(this.props.location.search);\n        if(res == null){\n            return \"\";\n        }else{\n            return res[1];\n        }\n    }\n    //获取分类列表\n    getCategories =async ()=>{\n        const result =await reqCategories();\n        if (result) {\n            this.setState({categories: result});\n        }\n    };\n\n    //获取文章\n    getTopicEdit = async (tid) =>{\n       const result = await reqEditTopic(tid);\n        if (result) {\n            this.setState({topic: result});\n        }\n    };\n\n    componentDidMount () {\n        //获取分类列表\n        this.getCategories();\n\n        //获取文章\n        const tid = this.getParam(\"tid\");\n        this.setState({tid:tid});\n\n        this.getTopicEdit(tid);\n\n        // 异步设置编辑器内容\n        setTimeout(() => {\n            this.props.form.setFieldsValue({\n                content: BraftEditor.createEditorState(this.state.topic.Content)\n            })\n        }, 300)\n        // this.setState({\n        //     editorState:BraftEditor.createEditorState(topic.Content)\n        // })\n\n\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.setState({loading:true});\n                let formData = new FormData();\n\n                formData.append('tid',this.state.tid);\n                formData.append('attachment',this.refs.attachment.files[0]);\n                formData.append('title',values.title);\n                formData.append('category',values.select);\n                formData.append('content',values.content.toHTML());\n                formData.append('label',values.label);\n                fetch(\"/topicat/edit\",{\n                    method:\"POST\",\n                    body:formData\n\n                }).then(res=>res.json())\n                    .then(result=>{\n                        if(result.Code === \"200\"){\n                            this.props.history.push('/article');\n                        }\n                    });\n            }\n        });\n    };\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const {categories} = this.state;\n        const {Labels,Title,Content,Category,Attachment} = this.state.topic;\n\n        const controls = [\n\n            'undo', 'redo', 'separator',\n            'font-size', 'line-height', 'letter-spacing', 'separator',\n            'text-color', 'bold', 'italic', 'underline', 'strike-through', 'separator',\n            'superscript', 'subscript', 'remove-styles', 'emoji',  'separator', 'text-indent', 'text-align', 'separator',\n            'headings', 'list-ul', 'list-ol', 'blockquote', 'code', 'separator',\n            'link', 'separator', 'hr', 'separator',\n            'media', 'separator',\n            'clear'\n            // ,\n\n            /* 'bold', 'italic', 'underline', 'text-color', 'separator',\n             'link', 'separator', 'media'*/\n        ];\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                md: { span: 24  },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                md: { span: 24 },\n            },\n        };\n\n        return (\n            <div className=\"article-add\">\n                <Spin spinning={this.state.loading} size=\"large\">\n                    <h3 style={{textAlign:'center'}}>修改文章</h3>\n                    <Form className=\"article-add-form\" {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Form.Item label=\"标题\" >\n                            {getFieldDecorator('title', {\n                                rules: [{ required: true, message: '请输入标题!', whitespace: true }],\n                                initialValue:Title\n                            })(<Input placeholder=\"请输入标题\"/>)}\n                        </Form.Item>\n                        <Form.Item label=\"分类\" hasFeedback>\n                            {getFieldDecorator('select', {\n                                rules: [{ required: true, message: 'Please select your country!' }],\n                                initialValue:[Category]\n                            })(\n                                <Select\n                                    // defaultValue=\"前端\"\n                                    showSearch\n                                    placeholder=\"请选择分类\"\n                                    optionFilterProp=\"children\"\n                                    filterOption={(input, option) =>\n                                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                >\n                                    {\n                                        categories.map((cate)=>{\n                                            return (\n                                                <Option key={cate.Id} value={cate.Title} >{cate.Title}</Option>\n                                            )\n                                        })\n                                    }\n                                </Select>,\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"标签\" >\n                            {getFieldDecorator('label', {\n                                rules: [{ required: true, message: '请输入标签!' }],\n                                initialValue:Labels\n                            })(<Input  placeholder='请输入标签!'/>)}\n                        </Form.Item>\n                        <Form.Item  label=\"文章内容\">\n                            {getFieldDecorator('content', {\n                                validateTrigger: 'onBlur',\n                                rules: [{\n                                    required: true,\n                                    validator: (_, value, callback) => {\n                                        if (value.isEmpty()) {\n                                            callback('请输入内容')\n                                        } else {\n                                            callback()\n                                        }\n                                    }\n                                }],\n                                initialValue:{Content}\n                            })(\n                                <BraftEditor\n                                    className=\"my-editor\"\n                                    controls={controls}\n                                    placeholder=\"请输入内容！\"\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"文件\" >\n                            {Attachment&& <img src={`/attachment/${Attachment}`} style={{width:\"100px\"}} alt=\"\"/>}\n                            <input className=\"article-edit-file\" type=\"file\" ref=\"attachment\"/>\n                        </Form.Item>\n                        <Form.Item style={{textAlign:\"center\"}}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                修改\n                            </Button>\n                        </Form.Item>\n                        <div>\n                        </div>\n                    </Form>\n                </Spin>\n            </div>\n        )\n    }\n}\n\nconst WrappedArticleAdd = Form.create({ name: 'validate_other' })(ArticleAdd);\n\nexport default WrappedArticleAdd;","import React, {Component} from \"react\";\nimport './Youku.less';\n\nexport default class Youku extends Component {\n    render() {\n\n        return (\n            <div className=\"youku\">\n                <h1>敬请期待</h1>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport './Toudu.less'\nexport default class Toudu extends Component {\n    render() {\n\n        return (\n            <div className=\"toudu\">\n                <h1>敬请期待</h1>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport './Glory.less';\n\nexport default class Glory extends Component {\n    render() {\n\n        return (\n            <div className=\"glory\">\n                <h1>敬请期待</h1>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport './Lol.less';\n\nexport default class Lol extends Component {\n    render() {\n        return (\n            <div className=\"lol\">\n                <h1>敬请期待</h1>\n            </div>\n        )\n    }\n}","import React, {Fragment} from 'react';\nimport {Route,Switch,Redirect} from 'react-router-dom';\nimport './Admin.less';\n\nimport Header from '../../component/header/Header.jsx';\nimport Footer from '../../component/footer/Footer.jsx';\nimport Home from \"../home/Home.jsx\";\nimport Article from \"../article/Article.jsx\";\nimport Category from \"../category/Category.jsx\";\nimport Tech from \"../tech/Tech.jsx\";\nimport ArticleAdd from \"../article/ArticleAdd\";\nimport ArticleView from \"../article/ArticleView\";\nimport ArticleEdit from \"../article/ArticleEdit\";\nimport Youku from \"../life/Youku\";\nimport Toudu from \"../life/Toudu\";\nimport Glory from \"../life/Glory\";\nimport Lol from \"../life/Lol\";\n\nfunction Admin(){\n    return (\n        <Fragment>\n            <Header/>\n            <div className=\"admin\">\n                <Switch>\n                    <Route path='/home' component={Home} />\n                    <Route path='/category' component={Category} />\n                    <Route path='/article' >\n                        <Switch>\n                            <Route path='/article/add' component={ArticleAdd}/>\n                            <Route path='/article/view' component={ArticleView}/>\n                            <Route path='/article/edit' component={ArticleEdit}/>\n                            <Route path='/article' component={Article}/>\n                        </Switch>\n                    </Route>\n                    <Route path='/youku' component={Youku}/>\n                    <Route path='/toudu' component={Toudu}/>\n                    <Route path='/glory' component={Glory}/>\n                    <Route path='/lol' component={Lol}/>\n                    <Route path='/tech' component={Tech} />\n                    <Redirect to='/home'/>\n                </Switch>\n            </div>\n            <Footer />\n        </Fragment>\n    );\n}\n\nexport default Admin;\n","import React from 'react';\nimport {reqRegister} from \"../../api\";\nimport './Register.less'\n\nimport {\n    Form,\n    Input,\n    Button,\n    message,\n} from 'antd';\n\nclass RegisterForm extends React.Component {\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n    };\n\n\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n            if (!err) {\n                const {name,email,password} = values;\n                const data={'name':name,'email':email,'password':password};\n                console.log(data);\n                const result = await reqRegister(data);\n                if(result.Code === \"200\"){\n                    message.success('注册成功，请登录!');\n                    this.props.history.replace('/login');\n                }\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('密码不一致!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    handleWebsiteChange = value => {\n        let autoCompleteResult;\n        if (!value) {\n            autoCompleteResult = [];\n        } else {\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n        }\n        this.setState({ autoCompleteResult });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 6 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 18 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 18,\n                    offset: 3,\n                },\n            },\n        };\n\n        return (\n            <div className=\"register\">\n                <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"register-form\">\n                    <Form.Item\n                        label={\n                            <span>\n                            姓名\n                        </span>\n                        }\n                    >\n                        {getFieldDecorator('name', {\n                            rules: [\n                                { required: true, message: '请输入您的姓名!', whitespace: true },\n                                { min: 4, message: '用户名至少4位' },\n                                { max: 12, message: '用户名最多12位' },\n                                { pattern:/^[a-zA-Z0-9_]+$/,message:'用户名必须是英文、数字或下划线组成'},\n                            ],\n                        })(<Input style={{width:'80%'}}/>)}\n                    </Form.Item>\n                    <Form.Item label=\"邮箱\">\n                        {getFieldDecorator('email', {\n                            rules: [\n                                {\n                                    type: 'email',\n                                    message: '邮箱格式不符!',\n                                },\n                                {\n                                    required: true,\n                                    message: '请输入您的邮箱!',\n                                },\n                            ],\n                        })(<Input style={{width:'80%'}}/>)}\n                    </Form.Item>\n                    <Form.Item label=\"密码\" hasFeedback>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入您的密码!',\n                                },\n                                { min: 6, message: '用户名至少6位' },\n                                { max: 12, message: '用户名最多12位' },\n                                { pattern:/^[a-zA-Z0-9_]+$/,message:'用户名必须是英文、数字或下划线组成'},\n                                {\n                                    pattern:/^[a-zA-Z0-9_]+$/,\n                                    message:'用户名必须是英文、数字或下划线组成'\n                                },\n                                {\n                                    validator: this.validateToNextPassword,\n                                },\n                            ],\n                        })(<Input.Password style={{width:'80%'}}/>)}\n                    </Form.Item>\n                    <Form.Item label=\"确认密码\" hasFeedback>\n                        {getFieldDecorator('confirm', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请确认您的密码!',\n                                },\n                                {\n                                    validator: this.compareToFirstPassword,\n                                },\n                            ],\n                        })(<Input.Password onBlur={this.handleConfirmBlur} style={{width:'80%'}}/>)}\n                    </Form.Item>\n                    {/*<Form.Item label=\"手机号码\">\n                    {getFieldDecorator('phone', {\n                        rules: [{ required: false, message: '请输入您的的手机号!' }],\n                    })(<Input style={{width:'80%'}}/>)}\n                </Form.Item>*/}\n                    <Form.Item {...tailFormItemLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\" block>\n                            注册\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst Register = Form.create({ name: 'register' })(RegisterForm);\n\nexport default Register;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\n\nimport Login from \"./pages/login/Login\";\nimport Admin from \"./pages/admin/Admin\";\nimport Register from \"./pages/login/Register\";\n\nfunction App(props){\n  return (\n    <BrowserRouter>\n        <Route>\n            <Switch>\n                <Route path='/login' component={Login} />\n                <Route path='/register' component={Register} />\n                <Route path='/' component={Admin} />\n            </Switch>\n        </Route>\n\n    </BrowserRouter>\n  );\n}\n\nexport default connect(\n  function mapStateToProps(state) {\n      return state;\n  },\n  function mapDispatchToProps(dispatch) {\n      return { dispatch };\n  }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport storageUtils from \"./utils/storageUtils\";\nimport memoryUtils from \"./utils/memoryUtils\";\n\nconst user = storageUtils.getUser();\nmemoryUtils.user = user;\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}